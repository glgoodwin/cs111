(bindrec ((map (fun (f xs)
		 (if (empty? xs)
		     xs
		     (prep (f (head xs)) (map f (tail xs)))))))
  (bindpar ((a 1)
	    (b 1))
    (bindpar ((a 20)
	      (z a))
      (bind add! (abs x (seq (<- z (+ (seq (print "calling add! where z=")
					   (println z))
				      x))
			     z))
	(bindrec ((s (prep b t))
		  (t (map add! s)))
	  (seq (println "")
	       (+ (seq (print "(head t)=")
		       (println (head t)))
		  (seq (print "(head (tail t))=")
		       (println (head (tail t)))))))))))
