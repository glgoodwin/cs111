(fofl-plus (n) (list (test 2 3 4 n) (test 5 6 7 n))
  (def (sigma f lo hi)
    (if (> lo hi) 0
        (+ (applyClosure f lo) (sigma f (+ lo 1) hi))))
  (def (test p q r h) 
    (list (sigma (list (fref sq)) 1 h)
          (sigma (scale p) 1 h)
          (sigma (linear q r) 1 h)))
  (def (sq x clo) (* x x))
  (def (scale c) (list (fref scaleClosed) c))
  (def (scaleClosed y clo) 
    (bind c (nth 2 clo)
      (* c y)))
  (def (linear a b) (list (fref linearClosed) a b))
  (def (linearClosed z clo) 
    (bindpar ((a (nth 2 clo))
              (b (nth 3 clo)))
      (+ (* a z) b)))
  (def (applyClosure clo arg) (fapp (nth 1 clo) arg clo))
)
